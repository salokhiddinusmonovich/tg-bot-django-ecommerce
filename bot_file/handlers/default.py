from aiogram import types
from random import randrange
from aiogram.dispatcher.filters import Text
from django.conf import settings
from ..loader import bot, dp
from ..keyboards import sign_inup_kb, admin_kb, default_kb
from ..models import TelegramUser
from .authorization import sign_in
from asgiref.sync import sync_to_async
import pytz
from datetime import datetime


HELP_TEXT = """
–ü—Ä–∏–≤–µ—Ç üëã, —è –±–æ—Ç –ø–æ –ø—Ä–æ–¥–∞–∂–µ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤! –£ –Ω–∞—Å –µ—Å—Ç—å —Ç–∞–∫–∏–µ –∫–æ–º–∞–Ω–¥—ã –∫–∞–∫:

<b>–ü–æ–º–æ—â—å ‚≠êÔ∏è</b> - –ø–æ–º–æ—â—å –ø–æ –∫–æ–º–∞–Ω–¥–∞–º –±–æ—Ç–∞
<b>–û–ø–∏—Å–∞–Ω–∏–µ üìå</b> - –∞–¥—Ä–µ—Å, –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ, –≥—Ä–∞—Ñ–∏–∫ —Ä–∞–±–æ—Ç—ã
<b>–ö–∞—Ç–∞–ª–æ–≥ üõí</b> - —Å–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤ –∫–æ—Ç–æ—Ä—ã–µ –º–æ–∂–Ω–æ –∫—É–ø–∏—Ç—å
<b>–ü—Ä–æ—Å–º–æ—Ç—Ä —Å–≤–æ–µ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è</b> - –ø—Ä–æ—Å–º–æ—Ç—Ä —Å–≤–æ–µ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è

–ù–æ –ø–µ—Ä–µ–¥ –Ω–∞—á–∞–ª–æ–º –Ω—É–∂–Ω–æ <b>–∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è –∏–ª–∏ –≤–æ–π—Ç–∏</b> –≤ —Å–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å. 
–ù–∞–∂–º–∏ –Ω–∞ –∫–æ–º–∞–Ω–¥—É <b>–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è ‚úåÔ∏è'</b> –∏–ª–∏ <b>–í–æ–π—Ç–∏ üëã</b>
–ï—Å–ª–∏ —ç—Ç–æ–≥–æ –Ω–µ —Å–¥–µ–ª–∞–µ—Ç–µ, –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ –∫–æ–º–∞–Ω–¥—ã –±—É–¥—É—Ç <b>–Ω–µ –¥–æ—Å—Ç—É–ø–Ω—ã</b> üî¥

–†–∞–¥—ã —á—Ç–æ –≤—ã –∏—Å–ø–æ–ª—å–∑—É–µ—Ç–µ –¥–∞–Ω–Ω–æ–≥–æ –±–æ—Ç–∞ ü¶¶
"""

# Command to start the bot
async def cmd_start(message: types.Message):
    try:
        await bot.send_message(chat_id=message.chat.id,
                               text="–ü—Ä–∏–≤–µ—Ç ‚úã, —è –±–æ—Ç –ø–æ –ø—Ä–æ–¥–∞–∂–µ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤!\n\n"
                                    "–£ –º–µ–Ω—è –≤—ã –º–æ–∂–µ—Ç–µ –∫—É–ø–∏—Ç—å –≤—Å–µ —á—Ç–æ –∑–∞—Ö–æ—Ç–∏—Ç–µ, —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å —Å–ø–∏—Å–æ–∫ "
                                    "—Ç–æ–≤–∞—Ä–æ–≤ –∫–æ—Ç–æ—Ä—ã–µ —É –º–µ–Ω—è –µ—Å—Ç—å.\n\n"
                                    "–ù–∞–∂–º–∏—Ç–µ —Å–Ω–∏–∑—É –Ω–∞ –∫–æ–º–∞–Ω–¥—É '–ö–∞—Ç–∞–ª–æ–≥ üõí'\n\n"
                                    "–ù–æ –¥–ª—è –Ω–∞—á–∞–ª–∞ <b>–Ω—É–∂–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è</b>, "
                                    "–∏–Ω–∞—á–µ –æ—Å—Ç–∞–ª—å–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –±—É–¥—É—Ç –Ω–µ –¥–æ—Å—Ç—É–ø–Ω—ã!\n\n"
                                    "–ù–∞–∂–º–∏ –Ω–∞ –∫–æ–º–∞–Ω–¥—É <b>–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è üëå'</b> –∏–ª–∏ <b>–í–æ–π—Ç–∏ üëã</b>",
                               reply_markup=sign_inup_kb.markup)
    except Exception as e:
        await message.reply(text=f"–û—à–∏–±–∫–∞: {str(e)}. –ß—Ç–æ–±—ã –º–æ–∂–Ω–æ –±—ã–ª–æ –æ–±—â–∞—Ç—å—Å—è —Å –±–æ—Ç–æ–º, "
                                 "—Ç—ã –º–æ–∂–µ—à—å –Ω–∞–ø–∏—Å–∞—Ç—å –º–Ω–µ –≤ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏–µ: "
                                 "https://t.me/salo_kh")


# Help command
async def cmd_help(message: types.Message):
    await bot.send_message(chat_id=message.chat.id, text=HELP_TEXT, reply_markup=default_kb.markup)


# Description command
async def cmd_description(message: types.Message):
    await bot.send_message(chat_id=message.chat.id,
                           text="–ü—Ä–∏–≤–µ—Ç ‚úã, –º—ã –∫–æ–º–ø–∞–Ω–∏—è –ø–æ –ø—Ä–æ–¥–∞–∂–µ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤!, "
                                "–ú—ã –æ—á–µ–Ω—å —Ä–∞–¥—ã —á—Ç–æ –í—ã –∏—Å–ø–æ–ª—å–∑—É–µ—Ç–µ –Ω–∞—à —Å–µ—Ä–≤–∏—Å ‚ù§Ô∏è, –º—ã —Ä–∞–±–æ—Ç–∞–µ—Ç —Å –ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫–∞ –¥–æ "
                                "–ü—è—Ç–Ω–∏—Ü—ã.\n9:00 - 21:00")
    await bot.send_location(chat_id=message.chat.id,
                            latitude=randrange(1, 100),
                            longitude=randrange(1, 100))


# Get profile command
# @dp.message_handler(commands='getprofile')
async def cmd_getprofile(message: types.Message):
    try:
        user = await get_user_by_chat_id(message.chat.id)
        if not user:
            await message.answer("‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω.")
            return

        if not user.admin:
            await message.answer("–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥–µ.")
            return

        args = message.get_args()
        if not args:
            await message.answer("–í–≤–µ–¥–∏—Ç–µ –ª–æ–≥–∏–Ω –∏–ª–∏ chat_id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –Ω–∞–ø—Ä–∏–º–µ—Ä: /getprofile user123")
            return

        searched_user = await get_user_by_chat_id_or_user_login(args)
        if searched_user:
            moscow_tz = pytz.timezone('Europe/Moscow')
            registered_at_moscow = searched_user.registered_at.astimezone(moscow_tz)
            
            profile_info = (
                f"üë§ <b>–ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:</b>\n"
                f"üîë <b>–õ–æ–≥–∏–Ω:</b> {searched_user.user_login}\n"
                f"üí∞ <b>–ë–∞–ª–∞–Ω—Å:</b> {searched_user.balance}\n"
                f"üëë <b>–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä:</b> {'–î–∞' if searched_user.admin else '–ù–µ—Ç'}\n"
                f"üìÖ <b>–î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏:</b> {registered_at_moscow.strftime('%d-%m-%Y %H:%M:%S')}\n"
                f"üìù <b>–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π:</b> {searched_user.comment or '–ù–µ—Ç –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤'}"
            )
            await message.answer(profile_info, parse_mode='HTML')
        else:
            await message.answer("‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω.")
    except Exception as e:
        await message.answer(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö: {str(e)}")


# @dp.message_handler(commands='access')
async def cmd_access(message: types.Message):
    user = await get_user_by_chat_id(message.chat.id)
    if not user or not user.admin:
        await message.answer("–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.")
        return

    args = message.get_args()
    if not args:
        await message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –ª–æ–≥–∏–Ω –∏–ª–∏ chat_id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –≤—ã–¥–∞—á–∏ –¥–æ—Å—Ç—É–ø–∞.")
        return

    try:
        target_user = await get_user_by_chat_id_or_user_login(args)
        if target_user:
            target_user.admin = True
            await save_user(target_user)  
            await message.answer(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {target_user.user_login} —Ç–µ–ø–µ—Ä—å —è–≤–ª—è–µ—Ç—Å—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º.")
        else:
            await message.answer("‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω.")
    except Exception as e:
        await message.answer(f"–û—à–∏–±–∫–∞: {e}")


# @dp.message_handler(commands='giverub')
async def cmd_giverub(message: types.Message):
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º
    user = await get_user_by_chat_id(message.chat.id)
    if not user or not user.admin:
        await message.answer("–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.")
        return

    # –ü–æ–ª—É—á–∞–µ–º –∞—Ä–≥—É–º–µ–Ω—Ç—ã –∫–æ–º–∞–Ω–¥—ã
    args = message.get_args().split()

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —É–∫–∞–∑–∞–Ω–æ –ª–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä—É–±–ª–µ–π –∏ —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –æ–Ω–æ —á–∏—Å–ª–æ–º
    if len(args) != 2:
        await message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä—É–±–ª–µ–π –∏ –ª–æ–≥–∏–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –Ω–∞–ø—Ä–∏–º–µ—Ä: /giverub 100 'username.'")
        return
    
    amount = args[0]
    target_login = args[1]

    # –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä—É–±–ª–µ–π —è–≤–ª—è–µ—Ç—Å—è –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º —á–∏—Å–ª–æ–º
    if not amount.isdigit() or int(amount) <= 0:
        await message.answer("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä—É–±–ª–µ–π –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º —á–∏—Å–ª–æ–º.")
        return

    # –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ –ª–æ–≥–∏–Ω—É
    target_user = await get_user_by_chat_id_or_user_login(target_login)
    if target_user:
        target_user.balance += int(amount)
        await save_user(target_user)  # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
        await message.answer(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {target_user.user_login} –±—ã–ª–æ –∑–∞—á–∏—Å–ª–µ–Ω–æ {amount} —Ä—É–±–ª–µ–π.")
    else:
        await message.answer("‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —Ç–∞–∫–∏–º –ª–æ–≥–∏–Ω–æ–º –Ω–µ –Ω–∞–π–¥–µ–Ω.")



@sync_to_async
def get_user_by_chat_id_or_user_login(identifier):
    if identifier.isdigit():
        return TelegramUser.objects.filter(chat_id=int(identifier)).first()
    return TelegramUser.objects.filter(user_login=identifier).first()



@sync_to_async
def get_user_by_chat_id(chat_id):
    try:
        return TelegramUser.objects.get(chat_id=chat_id)
    except TelegramUser.DoesNotExist:
        return None
    
@sync_to_async
def save_user(user):
    user.save()


# Register default handlers
def default_handlers_register():
    dp.register_message_handler(cmd_start, commands='start')
    dp.register_message_handler(cmd_help, Text(equals='–ü–æ–º–æ—â—å ‚≠êÔ∏è'))
    dp.register_message_handler(cmd_description, Text(equals='–û–ø–∏—Å–∞–Ω–∏–µ üìå'))
    dp.register_message_handler(cmd_getprofile, commands='getprofile')
    dp.register_message_handler(cmd_access, commands='access')
    dp.register_message_handler(cmd_giverub, commands='giverub')

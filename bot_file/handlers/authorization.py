import re

from aiogram.dispatcher.filters import Text
from asgiref.sync import sync_to_async
from django.contrib.auth.hashers import make_password, check_password
from ..loader import dp
from aiogram import types
from aiogram.dispatcher import FSMContext
from ..models import TelegramUser
from ..states import auth_state, signin_state, forgot_password_state
from ..keyboards.registration_bg import markup, markup_cancel_forgot_password
from ..keyboards import default_kb, sign_inup_kb


new_user = {}
sign_in = {'current_state': False}
update_date = {}


REGISTRATION_TEXT = """
–î–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ —Å–Ω–∞—á–∞–ª–∞ –Ω–∞–ø–∏—à–∏—Ç–µ —Å–≤–æ–π –ª–æ–≥–∏–Ω!

–ò–∑ —á–µ–≥–æ –¥–æ–ª–∂–µ–Ω —Å–æ—Å—Ç–æ—è—Ç—å –ª–æ–≥–∏–Ω?
    - –õ–æ–≥–∏–Ω –¥–æ–ª–∂–µ–Ω —Å–æ—Å—Ç–æ—è—Ç—å —Ç–æ–ª—å–∫–æ –∏–∑ <b>–ª–∞—Ç–∏–Ω—Å–∫–∏—Ö –±—É–∫–≤</b>!
    - –î–ª–∏–Ω–Ω–∞ –ª–æ–≥–∏–Ω–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å <b>–±–æ–ª—å—à–µ 3 —Å–∏–º–≤–æ–ª–æ–≤(–±—É–∫–≤ –∏ —Ü–∏—Ñ—Ä)</b>
    - –õ–æ–≥–∏–Ω –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å <b>—É–Ω–∏–∫–∞–ª—å–Ω—ã–º –∏ –Ω–µ –ø–æ–≤—Ç–æ—Ä—è—é—â–∏–º–∏—Å—è</b>
    
–ü–µ—Ä–µ–¥ —Ç–µ–º –∫–∞–∫ –æ—Ç—Ä–ø–∞–≤–∏—Ç—å –ª–æ–≥–∏–Ω –ø–µ—Ä–µ–ø—Ä–æ–≤–µ—Ä—å—Ç–µ –µ–≥–æ!
"""


# @dp.message_handler(Text(equals='–û—Ç–º–µ–Ω–∞ ‚ùå', ignore_case=True), state='*')
async def command_cancel(message: types.Message, state: FSMContext):
    current_state = await state.get_data()
    if current_state is None:
        return
    await state.finish()
    await message.answer(text="–û–ø–µ—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–æ –æ—Ç–º–µ–Ω–µ–Ω–∞ üôÖ‚Äç", reply_markup=sign_inup_kb.markup)



# @dp.message_handler(Text(equals='–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è ‚úåÔ∏è'), state='*')
async def prpcess_registration(message: types.Message):
    await message.answer(REGISTRATION_TEXT, reply_markup=markup)
    await auth_state.AuthState.user_login.set()



def authorization_handlers_register():
    dp.register_message_handler(command_cancel, Text(equals='–û—Ç–º–µ–Ω–∞ ‚ùå', ignore_case=True), state='*')
    dp.message_handler(Text(equals='–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è ‚úåÔ∏è'), state='*')



